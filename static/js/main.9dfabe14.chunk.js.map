{"version":3,"sources":["utils/API.js","components/EmpDir.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["axios","get","EmpDir","props","Row","className","src","employee","img","alt","firstName","lastName","phone","cell","email","data-name","onClick","sortTable","employees","map","x","i","App","state","users","usersFiltered","order","getUsers","a","API","response","console","group","data","results","empDB","picture","medium","name","last","first","setState","warn","handleInput","val","filter","includes","employeeSorted","sortedUsers","sort","b","log","employeeA","toLowerCase","employeeB","userFiltered","e","key","target","getAttribute","this","htmlFor","placeholder","type","onChange","value","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9dfabe14.chunk.js","sourcesContent":["import axios from 'axios';\n// eslint-disable-next-line\nexport default {\n    getUsers: ()=> axios.get(\"https://randomuser.me/api/?results=100&nat=us\")\n};\n//*** Random dummy information to populate the directory. ***//\n\n","import React from \"react\";\nimport \"./EmpDir.css\"\n\nfunction EmpDir(props) {\n    const Row = (props) => {\n        return (\n            <tr>\n                <td className=\"align-middle\">\n                    <img src={props.employee.img} alt=\"Employee Pic\" />\n                </td>\n                <td className=\"text-center align-middle\">{props.employee.firstName + \" \" + props.employee.lastName}</td>\n                <td className=\"text-center align-middle\">{props.employee.phone}</td>\n                <td className=\"text-center align-middle\">{props.employee.cell}</td>\n                <td className=\"text-center align-middle\">{props.employee.email}</td>\n            </tr>\n        );\n    };\n\n    return (\n        <div className=\"wrapper\">\n          <table className=\"table table-striped table-hover\">\n            <thead className=\"thead-dark\">\n              <tr>\n                <th data-name=\"img\" onClick={props.sortTable}></th>\n                <th data-name=\"firstName\" onClick={props.sortTable}>Name ðŸ”»</th>\n                <th data-name=\"phone\" onClick={props.sortTable}>Phone</th>\n                <th data-name=\"cell\" onClick={props.sortTable}>Cell</th>\n                <th data-name=\"email\" onClick={props.sortTable}>Email</th>\n              </tr>\n            </thead>\n            <tbody>\n              {props.employees.map((x, i) => (\n                <Row employee={x} key={i + \"-empRow\"} />\n              ))}\n            </tbody>\n          </table>\n        </div>\n      );\n    }\n\n    export default EmpDir;","import React from 'react';\nimport API from './utils/API';\nimport EmpDir from \"./components/EmpDir\";\nimport \"./App.css\"\n\nclass App extends React.Component {\n  state = {\n    users: [],\n    usersFiltered: [],\n    order: \"ascend\"\n  };\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  getUsers = async() => {\n    try {\n      const response = await API.getUsers();\n      console.group(response.data.results);\n\n      const empDB = response.data.results.map(x => ({\n        img: x.picture.medium,\n        lastName: x.name.last,\n        firstName: x.name.first,\n        phone: x.phone,\n        cell: x.cell,\n        email: x.email\n      }));\n\n      this.setState({ users: empDB, usersFiltered: empDB });\n    }catch (error) {\n      console.warn(error);\n    }\n  }\n\nhandleInput = (val) => {\n  this.setState({\n    users: this.state.usersFiltered.filter((x) => x.firstName.includes(val)),\n  });\n};\n\nemployeeSorted = () => {\n  const sortedUsers = this.state.usersFiltered;\n  \n  sortedUsers.sort(function (a, b) {\n    console.log (a.first, \"a value\", b.first, \"b value\");\n\n    var employeeA = a.name.first.toLowerCase();\n    var employeeB = a.name.first.toLowerCase();\n\n    if (employeeA < employeeB) {\n      return -1;\n    }\n    if (employeeA > employeeB) {\n      return 1;\n    }\n    return 0;\n  });\n  this.setState = {\n    userFiltered: sortedUsers,\n  };\n\n  this.setState({\n    usersFiltered: this.state.users.sort((a, b) => {\n      console.log(a.first, \"a value\", b.first, \"b value\");\n      var employeeA = a.first.toLowerCase();\n      var employeeB = b.first.toLowerCase();\n      \n      if (employeeA < employeeB) {\n        return 1;\n      }\n      if (employeeA > employeeB) {\n        return -1;\n      }\n      return 0;\n    }),\n  });\n\n  return this.setState({\n    order: \"ascend\"\n  });\n};\n\n  sortTable = (e) => {\n    const key = e.target.getAttribute(\"data-name\");\n\n    this.setState({\n      users: this.state.users.sort((a, b) => (a[key] > b[key] ? 1 : -1)),\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"text-center mb-4\">\n        <h1 className=\"text-center mb-4 searchbar\">Employee Directory</h1>\n        \n          <label className=\"text-center mb-4\" htmlFor=\"text\">\n          <input className=\"text-center mb-4\"placeholder=\"Search\" type=\"text\"\n          onChange={(e) => this.handleInput(e.target.value)}/></label>\n       \n          <EmpDir employees={this.state.users} sortTable={this.sortTable} />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />,\n \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}